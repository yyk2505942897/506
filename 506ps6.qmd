---
title: "506ps6"
author: "Yukun Yang"
format: pdf
editor: visual
---

## 1

https://github.com/yyk2505942897/506.git

```{r}
library(nycflights13)
library(dplyr)
library(purrr)
library(tidyr)
library(boot)
library(parallel)
library(furrr)
library(future)

n <- 1000

data("flights")
flights <- flights %>% filter(!is.na(air_time))

bootstrap_mean <- function(data, indices) {
  d <- data[indices, ] 
  mean(d$air_time)
}

stratified_bootstrap <- function(data, strata, n_bootstrap) {
  bootstrapped_means <- data %>% 
    group_by(!!sym(strata)) %>% 
    group_map(~boot(., bootstrap_mean, R = n_bootstrap, stype = "i"), .keep = TRUE) %>% 
    map_df(~as.data.frame(tibble(strata = .x$strata, t0 = .x$t0))) %>% 
    group_by(strata) %>% 
    summarize(
      mean = mean(t0),
      lower_ci = quantile(t0, probs = 0.025),
      upper_ci = quantile(t0, probs = 0.975)
    )
  return(bootstrapped_means)
}

plan(multisession, workers = detectCores() - 1)
options(future.rng.onMisuse = "ignore")
parallel_stratified_bootstrap <- function(data, strata, n_bootstrap) {
  bootstrapped_means <- data %>% 
    group_by(!!sym(strata)) %>% 
    group_map(~future({boot(., bootstrap_mean, R = n_bootstrap, stype = "i")}), .keep = TRUE) %>% 
    future::value() %>% 
    map_df(~as.data.frame(tibble(strata = .x$strata, t0 = .x$t0))) %>% 
    group_by(strata) %>% 
    summarize(
      mean = mean(t0),
      lower_ci = quantile(t0, probs = 0.025),
      upper_ci = quantile(t0, probs = 0.975)
    )
  return(bootstrapped_means)
}


start_time_non_parallel <- Sys.time()
non_parallel_results <- stratified_bootstrap(flights, "origin", n)
end_time_non_parallel <- Sys.time()
time_non_parallel <- end_time_non_parallel - start_time_non_parallel
print(non_parallel_results)


start_time_parallel <- Sys.time()
parallel_results <- parallel_stratified_bootstrap(flights, "origin", n)
end_time_parallel <- Sys.time()
time_parallel <- end_time_parallel - start_time_parallel
print(parallel_results)


print(time_non_parallel)
print(time_parallel)

```
